* {
    box-sizing: border-box;
	margin: 0;
	padding: 0;
}

/*
Aquí se le aplica un tamaño de fuente que no se va a
modificar por el tamaño de la pantalla
*/
p {
    font-size: 18px;
}

/*
Aquí se aplicaria el 50% del tamaño de la fuente 
que tiene el html por defecto
*/
p {
    font-size: 50%;
}

/*
.-Con el 70% hacemo que se ajuste el color al tamaño de
  la pantalla, evita el scroll horizontal
.-Con 300px height determinamos un altura fija, que no
  cambiar, se generará un scroll para vizualizar en caso
  que la pantalla no sea lo sifucientmente grande
*/
main {
    background-color: red;
    width: 70%;
    height: 100px;
}

/*
Toma el tamaño de fuente del padre directo (html en este
caso) y aumenta en 0.5 el tamaño de fuente
*/
section {
    font-size: 1.5em;
}

/*
Rem funciona igual que el em, con la diferencia que es 
relativo al valor de la fuente del elemento html, y no tiene 
en cuenta el valor heredado o del elemento que lo contiene.

Por defecto el html viene con un tamaño de fuente de 16px 
asi que siempre

1 REM = 16PX

Webhack: html { font-size: 62.5%; }

Hara es darle a el html un valor de 10px ya que 
16px - 62.5% = 10px

ahora si por ejemplo a una etiqueta le asignamos 2rem este hara 
referencia a 20px, o si por ejemplo le damos un valor de 1.5rem 
su valor sera de 15px
*/
h1 {
    font-size: 1.5rem;
}

/*
(vw,vh) de viewport width y viewport height
*/

div {
    width: 100vw;
    height: 100vh;
    background-color: purple;
}

/*
En margin:
-."0"    indica que no agrege margen ni arriba ni abajo
-."auto" indica que se ajuste el margen de manera automática

Max/min width:
**Regla** al usar min/max debemos tener un width base (en %)
Esto siver para limitar el crecimiento, se aplicará el % con
respecto a su contendor, pero solo tendra valores dentro del
min y max declarados
*/
section {
    width: 80%;
    min-width: 300px;
    max-width: 500px;
    height: 500px;
    margin: 0 auto;
    background-color: aquamarine;

}

